/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import * as sword from 'sword'
import { utils } from '../utils'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Micheal: THREE.Mesh
    Title: THREE.Mesh
    BoundingBox1: THREE.Mesh
    BoundingBox2: THREE.Mesh
  }
  materials: {
    Text: THREE.MeshStandardMaterial
  }
}

const url = new URL('../assets/glb/name.glb', import.meta.url).href

const Model = () => {
  const { nodes } = useGLTF(url) as GLTFResult
  const bb1Ref = useRef<THREE.Mesh>()
  const bb2Ref = useRef<THREE.Mesh>()

  useEffect(() => {
    const bb1 = bb1Ref.current!
    const bb2 = bb2Ref.current!

    sword.createRigidBody(bb1, {
      canSleep: false,
      type: sword.RigidBodyType.Fixed,
      collider: sword.ColliderType.ConvexHull,
      vertices: new Float32Array(bb1.geometry.attributes.position!.array),
      indices: bb1.geometry.index ? new Uint16Array(bb1.geometry.index.array) : null,
    })

    sword.createRigidBody(bb2, {
      canSleep: false,
      type: sword.RigidBodyType.Fixed,
      collider: sword.ColliderType.ConvexHull,
      vertices: new Float32Array(bb2.geometry.attributes.position!.array),
      indices: bb2.geometry.index ? new Uint16Array(bb2.geometry.index.array) : null,
    })
  }, [])

  return (
    <>
      <mesh
        name="Micheal"
        castShadow receiveShadow
        geometry={nodes.Micheal.geometry}
        material={nodes.Micheal.material}
      />
      <mesh
        name="Title"
        castShadow receiveShadow
        geometry={nodes.Title.geometry}
        material={nodes.Title.material}
      />
      <mesh
        name='MichealBB'
        visible={false}
        ref={bb1Ref}
        geometry={nodes.BoundingBox1.geometry}
        position={[-0.019, 0.035, -0.248]}
      />
      <mesh
        name='TitleBB'
        visible={false}
        ref={bb2Ref}
        geometry={nodes.BoundingBox2.geometry}
        position={[-0.019, 0.035, 0.258]}
      />
    </>
  )
}

export default Model

useGLTF.preload(url)
