/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Portrait: THREE.Mesh
  }
  materials: {
    Bake: THREE.MeshStandardMaterial
  }
}

const Model = ({ ...props }: JSX.IntrinsicElements['group']) => {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/portrait.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" userData={{ glTF2ExportSettings: { export_extras: 1, use_selection: 1 } }}>
        <mesh
          name="Portrait"
          castShadow
          receiveShadow
          geometry={nodes.Portrait.geometry}
          material={materials.Bake}
          userData={{ name: 'Portrait' }}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/portrait.glb')

export default Model
