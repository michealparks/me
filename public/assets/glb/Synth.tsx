/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube011: THREE.Mesh
    Cube012: THREE.Mesh
    Cube014: THREE.Mesh
    Cylinder: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder002: THREE.Mesh
    Cylinder003: THREE.Mesh
    BoundingBox: THREE.Mesh
  }
  materials: {
    ['Black Paint']: THREE.MeshStandardMaterial
    ['White Key']: THREE.MeshStandardMaterial
    Wood: THREE.MeshStandardMaterial
    ['Black Key']: THREE.MeshStandardMaterial
    Button: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/synth.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        name="Cube"
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials['Black Paint']}
        userData={{ name: 'Cube' }}
      />
      <mesh
        name="Cube001"
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={materials['White Key']}
        userData={{ name: 'Cube.001' }}
      />
      <mesh
        name="Cube002"
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={materials.Wood}
        userData={{ name: 'Cube.002' }}
      />
      <mesh
        name="Cube003"
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={nodes.Cube003.material}
        userData={{ name: 'Cube.003' }}
      />
      <mesh
        name="Cube004"
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={nodes.Cube004.material}
        userData={{ name: 'Cube.004' }}
      />
      <mesh
        name="Cube005"
        castShadow
        receiveShadow
        geometry={nodes.Cube005.geometry}
        material={nodes.Cube005.material}
        userData={{ name: 'Cube.005' }}
      />
      <mesh
        name="Cube006"
        castShadow
        receiveShadow
        geometry={nodes.Cube006.geometry}
        material={nodes.Cube006.material}
        userData={{ name: 'Cube.006' }}
      />
      <mesh
        name="Cube007"
        castShadow
        receiveShadow
        geometry={nodes.Cube007.geometry}
        material={nodes.Cube007.material}
        userData={{ name: 'Cube.007' }}
      />
      <mesh
        name="Cube011"
        castShadow
        receiveShadow
        geometry={nodes.Cube011.geometry}
        material={nodes.Cube011.material}
        userData={{ name: 'Cube.011' }}
      />
      <mesh
        name="Cube012"
        castShadow
        receiveShadow
        geometry={nodes.Cube012.geometry}
        material={nodes.Cube012.material}
        userData={{ name: 'Cube.012' }}
      />
      <mesh
        name="Cube014"
        castShadow
        receiveShadow
        geometry={nodes.Cube014.geometry}
        material={nodes.Cube014.material}
        userData={{ name: 'Cube.014' }}
      />
      <mesh
        name="Cylinder"
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
        userData={{ name: 'Cylinder' }}
      />
      <mesh
        name="Cylinder001"
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={nodes.Cylinder001.material}
        userData={{ name: 'Cylinder.001' }}
      />
      <mesh
        name="Cylinder002"
        castShadow
        receiveShadow
        geometry={nodes.Cylinder002.geometry}
        material={nodes.Cylinder002.material}
        userData={{ name: 'Cylinder.002' }}
      />
      <mesh
        name="Cylinder003"
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003.geometry}
        material={nodes.Cylinder003.material}
        userData={{ name: 'Cylinder.003' }}
      />
      <mesh
        name="BoundingBox"
        castShadow
        receiveShadow
        geometry={nodes.BoundingBox.geometry}
        material={nodes.BoundingBox.material}
        position={[-0.028, 0.008, -0.052]}
        userData={{ name: 'BoundingBox' }}
      />
    </group>
  )
}

useGLTF.preload('/synth.glb')
