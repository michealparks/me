/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Circle: THREE.Mesh
    Circle_1: THREE.Mesh
    Circle_2: THREE.Mesh
    BoundingBox: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    Clay: THREE.MeshStandardMaterial
    Leaf: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/plant.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Plant" userData={{ name: 'Plant' }}>
        <mesh name="Circle" castShadow receiveShadow geometry={nodes.Circle.geometry} material={materials.Dirt} />
        <mesh name="Circle_1" castShadow receiveShadow geometry={nodes.Circle_1.geometry} material={materials.Clay} />
        <mesh name="Circle_2" castShadow receiveShadow geometry={nodes.Circle_2.geometry} material={materials.Leaf} />
      </group>
      <mesh
        name="BoundingBox"
        castShadow
        receiveShadow
        geometry={nodes.BoundingBox.geometry}
        material={nodes.BoundingBox.material}
        position={[0, 0.196, 0.033]}
        userData={{ name: 'BoundingBox' }}
      />
    </group>
  )
}

useGLTF.preload('/plant.glb')
